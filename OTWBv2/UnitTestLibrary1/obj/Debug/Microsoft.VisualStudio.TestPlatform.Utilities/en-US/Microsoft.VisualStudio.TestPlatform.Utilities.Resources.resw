<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LUADisabledError" xml:space="preserve">
    <value>Unit tests for Windows Store apps cannot be run with Limited User Account disabled. Enable it to run tests.</value>
  </data>
  <data name="SourceInCompatibleNoFramework" xml:space="preserve">
    <value>{0} is built for Platform {1}.</value>
  </data>
  <data name="PrerequisiteValidDevLicense" xml:space="preserve">
    <value>No valid developer license found for running unit tests for Windows Store apps. Please install/renew your developer license.</value>
  </data>
  <data name="SourcesInCompatible" xml:space="preserve">
    <value>{0} are built for Framework {1} and Platform {2}.</value>
  </data>
  <data name="UIThreadNotFound" xml:space="preserve">
    <value>UI thread is not found for executing unit test for the Windows Store app.</value>
  </data>
  <data name="FailedToActivateWindowsStoreAppExecutor" xml:space="preserve">
    <value>Failed to activate Windows Store app unit test executor. Error: {0}.</value>
  </data>
  <data name="MissingRunSettingsNode" xml:space="preserve">
    <value>Could not find 'RunSettings' node.</value>
  </data>
  <data name="BuiltInAdministratorError" xml:space="preserve">
    <value>Unit tests for Windows Store apps cannot be run from BUILTIN\administrator or {0} user accounts. Please run tests using a user account from which process with medium and low privileges can be launched.</value>
  </data>
  <data name="AppxManifestReadError" xml:space="preserve">
    <value>Failed to read manifest file with Error: {0}</value>
  </data>
  <data name="AppContainerActivationFailureWithoutErrorCode" xml:space="preserve">
    <value>An internal error occurred while launching the test executor for a Windows Store app.</value>
  </data>
  <data name="AppContainerActivationFailure" xml:space="preserve">
    <value>Failed to launch test executor for the Windows Store app with error code {0}.</value>
  </data>
  <data name="SourceIncompatible" xml:space="preserve">
    <value>{0} is built for Framework {1} and Platform {2}.</value>
  </data>
  <data name="SystemArchitectureIncompatibleWithTargetPlatform" xml:space="preserve">
    <value>Incompatible Target platform settings '{0}' with system architecture '{1}'.</value>
  </data>
  <data name="PackageInstallationTimeout" xml:space="preserve">
    <value>Operation timed out. Unable to install Windows app package in {0} sec.</value>
  </data>
  <data name="PrerequisiteInteractiveSession" xml:space="preserve">
    <value>Unit tests for Windows Store apps cannot be run from a service or non interactive process. Please run unit tests from an interactive process.</value>
  </data>
  <data name="AppContainerActivationFromElevatedProcessError" xml:space="preserve">
    <value>Unit tests for Windows Store apps cannot be run from a process that has Administrator privileges. Please run unit tests for Windows Store apps from a non-administrator process.</value>
  </data>
  <data name="RunSettingsParseError" xml:space="preserve">
    <value>An error occurred while loading the settings.  Error: {0}.</value>
  </data>
  <data name="InvalidRunSettingsXml" xml:space="preserve">
    <value>Run settings XML does not contain "RunSettings" node.</value>
  </data>
  <data name="InvalidExecutorPath" xml:space="preserve">
    <value>Could not find file {0}. Consider reinstalling the Visual Studio Add-In.</value>
  </data>
  <data name="FailToStartProcess" xml:space="preserve">
    <value>Failed to launch test executor process {0}.</value>
  </data>
  <data name="PrerequisiteWin8OrHigher" xml:space="preserve">
    <value>Need Windows 8 or higher to run unit tests for Windows Store apps.</value>
  </data>
  <data name="UnableToFindTestPlatformCoreAssembly" xml:space="preserve">
    <value>Could not find the installed extensions because the required testPlatform assemblies ({0}) are not available at '{1}'</value>
  </data>
  <data name="SourceSeperator" xml:space="preserve">
    <value>, </value>
  </data>
  <data name="AppContainerUtilitiesNotFound" xml:space="preserve">
    <value>Microsoft.VisualStudio.TestPlatform.Utilities.AppContainer.dll is required to run unit tests for Windows Store apps. Please make sure it exists at the appropriate place.</value>
  </data>
  <data name="InvalidSettingsIncorrectValue" xml:space="preserve">
    <value>Invalid setting '{0}'. Invalid value '{1}' specified for '{2}'.</value>
  </data>
  <data name="PackageInstallationFailure" xml:space="preserve">
    <value>Installation of package '{1}' failed with Error: (0x{2:X}) {3}.
For more details look into Event Viewer under Applications and Services Logs -&gt; Microsoft -&gt; Windows -&gt; AppXDeployment-Server -&gt; Microsoft-Windows-AppXDeploymentServer/Operational.</value>
  </data>
</root>